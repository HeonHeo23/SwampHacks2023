{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maxim\\\\OneDrive\\\\Desktop\\\\temp\\\\test\\\\src\\\\new\\\\Container.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mongoose = require(\"mongoose\");\nconst client = axios.create({\n  baseURL: \"http://localhost:3500/rooms\"\n});\nconst Container = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [flag, setFlag] = useState(0);\n  useEffect(() => {\n    client.get().then(res => {\n      setRooms(res.data);\n    });\n  }, [flag]); //no dependency here allows commenting of request result actions\n  //add time-polling solution here\n\n  function createRoom(name, pass) {\n    client.post(\"\", {\n      id: rooms.length === 0 ? 0 : rooms[rooms.length - 1].id + 1,\n      name: name,\n      password: pass,\n      creator: localStorage.getItem(\"name\") //MAKE THIS MORE SECURE\n    }).then(res => {\n      //setRooms([...rooms, res.data]);\n      setFlag(flag + 1);\n    });\n  }\n  function updateRoom(paramId) {\n    client.put(`/${paramId}`, {\n      id: paramId,\n      name: \"updateRoom test\",\n      password: \"password1234\"\n    }).then(res => {\n      //const myRoom = rooms.findIndex(room => room.id === paramId)\n      setFlag(flag + 1);\n    });\n  }\n  function deleteRoom(id) {\n    client.delete(`/${id}`).then(() => {\n      //setRooms(null);\n      setFlag(flag + 1);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [rooms.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No rooms!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            display: 'inline'\n          },\n          children: room.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: room.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Join room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"roomBox\",\n      placeholder: \"Room name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"passBox\",\n      placeholder: \"Room password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => createRoom(document.getElementById(\"roomBox\").value, document.getElementById(\"passBox\").value),\n      children: \"Create room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updateRoom(7),\n      children: \"Update room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteRoom(8),\n      children: \"Delete Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(rooms),\n      children: \"print Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Container, \"9ahG8FMA0nsMMm7ipgrUNGRvjHs=\");\n_c = Container;\nexport default Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","axios","useEffect","useState","mongoose","require","client","create","baseURL","Container","rooms","setRooms","flag","setFlag","get","then","res","data","createRoom","name","pass","post","id","length","password","creator","localStorage","getItem","updateRoom","paramId","put","deleteRoom","delete","map","room","display","document","getElementById","value","console","log"],"sources":["C:/Users/maxim/OneDrive/Desktop/temp/test/src/new/Container.js"],"sourcesContent":["import React from 'react'\r\nimport axios from \"axios\";\r\nimport {useEffect, useState} from \"react\";\r\nconst mongoose = require(\"mongoose\");\r\n\r\nconst client = axios.create({\r\n  baseURL: \"http://localhost:3500/rooms\" \r\n});\r\n\r\nconst Container = () => {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [flag, setFlag] = useState(0);\r\n\r\n  useEffect(() => {\r\n    client.get()\r\n    .then((res) => {\r\n      setRooms(res.data);\r\n    })\r\n  }, [flag]); //no dependency here allows commenting of request result actions\r\n     //add time-polling solution here\r\n\r\n  function createRoom(name, pass) {\r\n    client.post(\"\", {\r\n      id: rooms.length === 0 ? 0 : rooms[rooms.length-1].id + 1,\r\n      name: name,\r\n      password: pass,\r\n      creator: localStorage.getItem(\"name\") //MAKE THIS MORE SECURE\r\n    })\r\n    .then((res) => {\r\n      //setRooms([...rooms, res.data]);\r\n      setFlag(flag + 1);\r\n    })  \r\n  }\r\n\r\n  function updateRoom(paramId) {\r\n    client.put(`/${paramId}`, {\r\n      id: paramId,\r\n      name: \"updateRoom test\",\r\n      password: \"password1234\"\r\n    })\r\n    .then((res) => {\r\n      //const myRoom = rooms.findIndex(room => room.id === paramId)\r\n      setFlag(flag + 1);\r\n    })\r\n  }\r\n\r\n  function deleteRoom(id) {\r\n    client.delete(`/${id}`)\r\n    .then(() => {\r\n      //setRooms(null);\r\n      setFlag(flag + 1);\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        (rooms.length === 0) ? <p>No rooms!</p> : <></>\r\n      }\r\n      <ul>\r\n        {rooms.map((room) => (\r\n          <>\r\n            <h1 style={{display: 'inline'}}>{room.name}</h1>\r\n            <p>{room.id}</p>\r\n            <button>Join room</button>\r\n          </>\r\n        ))}\r\n      </ul>\r\n      <input type=\"text\" id=\"roomBox\" placeholder='Room name'/>\r\n      <input type=\"text\" id=\"passBox\" placeholder='Room password'/>\r\n      <button onClick={() => createRoom(document.getElementById(\"roomBox\").value, document.getElementById(\"passBox\").value)}>Create room</button>\r\n      <button onClick={() => updateRoom(7)}>Update room</button>\r\n      <button onClick={() => deleteRoom(8)}>Delete Room</button>\r\n      <button onClick={() => console.log(rooms)}>print Rooms</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAC1C,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,MAAM,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC1BC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACdI,MAAM,CAACQ,GAAG,EAAE,CACXC,IAAI,CAAEC,GAAG,IAAK;MACbL,QAAQ,CAACK,GAAG,CAACC,IAAI,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;EACT;;EAEH,SAASM,UAAU,CAACC,IAAI,EAAEC,IAAI,EAAE;IAC9Bd,MAAM,CAACe,IAAI,CAAC,EAAE,EAAE;MACdC,EAAE,EAAEZ,KAAK,CAACa,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGb,KAAK,CAACA,KAAK,CAACa,MAAM,GAAC,CAAC,CAAC,CAACD,EAAE,GAAG,CAAC;MACzDH,IAAI,EAAEA,IAAI;MACVK,QAAQ,EAAEJ,IAAI;MACdK,OAAO,EAAEC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC,CAAC,CACDZ,IAAI,CAAEC,GAAG,IAAK;MACb;MACAH,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;IACnB,CAAC,CAAC;EACJ;EAEA,SAASgB,UAAU,CAACC,OAAO,EAAE;IAC3BvB,MAAM,CAACwB,GAAG,CAAE,IAAGD,OAAQ,EAAC,EAAE;MACxBP,EAAE,EAAEO,OAAO;MACXV,IAAI,EAAE,iBAAiB;MACvBK,QAAQ,EAAE;IACZ,CAAC,CAAC,CACDT,IAAI,CAAEC,GAAG,IAAK;MACb;MACAH,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;IACnB,CAAC,CAAC;EACJ;EAEA,SAASmB,UAAU,CAACT,EAAE,EAAE;IACtBhB,MAAM,CAAC0B,MAAM,CAAE,IAAGV,EAAG,EAAC,CAAC,CACtBP,IAAI,CAAC,MAAM;MACV;MACAF,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;IACnB,CAAC,CAAC;EACJ;EAGA,oBACE;IAAA,WAEKF,KAAK,CAACa,MAAM,KAAK,CAAC,gBAAI;MAAA,UAAG;IAAS;MAAA;MAAA;MAAA;IAAA,QAAI,gBAAG,qCAAK,eAEjD;MAAA,UACGb,KAAK,CAACuB,GAAG,CAAEC,IAAI,iBACd;QAAA,wBACE;UAAI,KAAK,EAAE;YAACC,OAAO,EAAE;UAAQ,CAAE;UAAA,UAAED,IAAI,CAACf;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eAChD;UAAA,UAAIe,IAAI,CAACZ;QAAE;UAAA;UAAA;UAAA;QAAA,QAAK,eAChB;UAAA,UAAQ;QAAS;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,gBAE7B;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eACL;MAAO,IAAI,EAAC,MAAM;MAAC,EAAE,EAAC,SAAS;MAAC,WAAW,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE,eACzD;MAAO,IAAI,EAAC,MAAM;MAAC,EAAE,EAAC,SAAS;MAAC,WAAW,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAE,eAC7D;MAAQ,OAAO,EAAE,MAAMJ,UAAU,CAACkB,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,KAAK,EAAEF,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,KAAK,CAAE;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS,eAC3I;MAAQ,OAAO,EAAE,MAAMV,UAAU,CAAC,CAAC,CAAE;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS,eAC1D;MAAQ,OAAO,EAAE,MAAMG,UAAU,CAAC,CAAC,CAAE;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS,eAC1D;MAAQ,OAAO,EAAE,MAAMQ,OAAO,CAACC,GAAG,CAAC9B,KAAK,CAAE;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3D;AAEV,CAAC;AAAA,GApEKD,SAAS;AAAA,KAATA,SAAS;AAsEf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}